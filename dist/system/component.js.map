{"version":3,"sources":["src/component.js"],"names":[],"mappings":";;;QAAO,OAAO,EACP,UAAU,0DAEJ,SAAS;;;AAHf,mBAAO;;AACP,sBAAU;;;;;;;;;;;AAEJ,qBAAS,mCAAS,UAAU;yBAA5B,SAAS;0CAAT,SAAS;;wBAAS,UAAU;AAAV,kCAAU;;;;0BAA5B,SAAS,EAAS,UAAU;;qCAA5B,SAAS;AACd,iCAAa;6BAAA,YAAG;AAChB,gCAAI,UAAU,GAAG,IAAI,CAAC;;AAEtB;AACe,yCADF,aAAa;0DAAb,aAAa;;AAElB,wCAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;AAErC,8CAAU,CAAC,sBAAsB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAClD,8CAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;;AAEjC,+DAPK,aAAa,8CAOT,QAAQ,EAAE;;AAEnB,wCAAI,IAAI,CAAC,QAAQ,YAAY,QAAQ,EAAE;AACnC,4CAAI,CAAC,QAAQ,EAAE,CAAC;qCACnB;iCACJ;;0CAZQ,aAAa;;uCAAb,aAAa;+BAAS,IAAI,CAAC,SAAS,EAa/C;yBACL;;;AAEG,gCAAY;6BAAA,YAAG;AACf,gCAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC/B,mCAAO,EAAE,CAAC,MAAM,CACZ,SAAS,CAAC,YAAY,IAAI,EAAE,EAC5B,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,CAC5C,CAAC;yBACL;;;AAEG,0BAAM;6BAAA,YAAG;;AACT,gCAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACf,oCAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;AAErB,oCAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CACzB,aAAa,GAAG,IAAI,EACpB,IAAI,CAAC,YAAY,CACpB,CAAC;;AAEF,oCAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,YAAM;AAC/B,2CAAO;AACH,gDAAQ,EAAE,GAAG;AACb,oDAAY,EAAE,IAAI;AAClB,wDAAgB,EAAE,IAAI;AACtB,kDAAU,EAAE,MAAK,kBAAkB,EAAE,CAAC,MAAM,CAAC,CACzC,MAAK,aAAa,CACrB,CAAC;qCACL,CAAC;iCACL,CAAC,CAAC;;AAEH,oCAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BAChC;;AAED,mCAAO,IAAI,CAAC,OAAO,CAAC;yBACvB;;;;;uBApDQ,SAAS;eAAS,UAAU;+BAuD1B,SAAS","file":"src/component.js","sourcesContent":["import angular from 'angular';\nimport Annotation from './annotation';\n\nexport class Component extends Annotation {\n    get controllerCls() {\n        var annotation = this;\n\n        return class controllerCls extends this.targetCls {\n            constructor() {\n                var injected = Array.from(arguments);\n\n                annotation.applyInjectionBindings(this, injected);\n                annotation.applyDecorators(this);\n\n                super(...injected);\n\n                if (this.activate instanceof Function) {\n                    this.activate();\n                }\n            }\n        };\n    }\n\n    get dependencies() {\n        var targetCls = this.targetCls;\n        return [].concat(\n            targetCls.dependencies || [],\n            this.getModuleNames(targetCls.components)\n        );\n    }\n\n    get module() {\n        if (!this._module) {\n            var name = this.name;\n\n            this._module = angular.module(\n                'components.' + name,\n                this.dependencies\n            );\n\n            this._module.directive(name, () => {\n                return {\n                    restrict: 'E',\n                    controllerAs: name,\n                    bindToController: true,\n                    controller: this.getInjectionTokens().concat([\n                        this.controllerCls\n                    ])\n                };\n            });\n\n            this.configure(this._module);\n        }\n\n        return this._module;\n    }\n}\n\nexport default Component;\n"]}