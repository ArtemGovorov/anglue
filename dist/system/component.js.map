{"version":3,"sources":["src/component.js"],"names":[],"mappings":"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","file":"src/component.js","sourcesContent":["import angular from 'angular';\nimport Annotation from './annotation';\n\nexport class Component extends Annotation {\n    get controllerCls() {\n        var annotation = this;\n        var TargetCls = this.targetCls;\n\n        class ControllerCls extends TargetCls {\n            constructor($scope) {\n                var injected = Array.from(arguments).slice(1);\n\n                super(...injected);\n\n                annotation.applyInjectionBindings(this, injected);\n                annotation.applyDecorators(this);\n\n                if (this.onDestroy instanceof Function) {\n                    $scope.$on('$destroy', this.onDestroy.bind(this));\n                }\n\n                if (this.activate instanceof Function) {\n                    this.activate();\n                }\n            }\n\n            fireComponentEvent(event, locals) {\n                if (this._event_handlers && this._event_handlers[event]) {\n                    this._event_handlers[event].call(this, locals);\n                }\n            }\n        }\n\n        return ControllerCls;\n    }\n\n    getInjectionTokens() {\n        return [\n            '$scope'\n        ].concat(super.getInjectionTokens());\n    }\n\n    get dependencies() {\n        var targetCls = this.targetCls;\n        return [].concat(\n            targetCls.dependencies || [],\n            Annotation.getModuleNames(targetCls.components)\n        );\n    }\n\n    get template() {\n        return this.targetCls.template || null;\n    }\n\n    get bindings() {\n        return this.targetCls.bindings || null;\n    }\n\n    get events() {\n        return this.targetCls.events || null;\n    }\n\n    get module() {\n        if (!this._module) {\n            var name = this.name;\n            var template = this.template;\n            var bindings = this.bindings;\n            var events = this.events;\n\n            this._module = angular.module(\n                'components.' + name,\n                this.dependencies\n            );\n\n            var directiveConfig = {\n                restrict: 'EA',\n                controllerAs: name,\n                bindToController: true,\n                scope: true,\n                controller: this.getInjectionTokens().concat([\n                    this.controllerCls\n                ])\n            };\n\n            if (template) {\n                if (template.url) {\n                    directiveConfig.templateUrl = template.url;\n                } else if (template.inline) {\n                    directiveConfig.template = template.inline;\n                }\n                if (template.replace) {\n                    directiveConfig.replace = true;\n                }\n            }\n\n            if (bindings) {\n                let scope = directiveConfig.scope = {};\n                for (let binding of Object.keys(bindings)) {\n                    let attr = bindings[binding];\n                    scope[binding] = `=${attr}`;\n                }\n            }\n\n            if (events) {\n                directiveConfig.link = (scope, el, attr, ctrl) => {\n                    var eventHandlers = ctrl._event_handlers = {};\n                    Object.keys(events).forEach((event) => {\n                        if (attr[event]) {\n                            eventHandlers[events[event]] = (locals) => {\n                                scope.$parent.$eval(attr[event], locals);\n                            };\n                        }\n                    });\n                };\n            }\n\n            this._module.directive(name, () => {\n                return directiveConfig;\n            });\n\n            this.configure(this._module);\n        }\n\n        return this._module;\n    }\n}\n\nexport default Component;\n"]}