{"version":3,"sources":["src/store.js"],"names":[],"mappings":";;;wGAGa,KAAK;;;;;;;;;;;;;;;;;;;;;;;AAAL,iBAAK;yBAAL,KAAK;0CAAL,KAAK;;;;;;;0BAAL,KAAK;;6BAAL,KAAK;;yBACC,YAAG;AACd,4BAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,+BAAO,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;qBAC1D;;;2BAEiB,8BAAG;AACjB,+BAAO,CACH,UAAU,EACV,eAAe,EACf,uBAAuB,CAC1B,CAAC,MAAM,4BAXH,KAAK,oDAW0B,CAAC;qBACxC;;;yBAEY,YAAG;AACZ,4BAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC/B,4BAAI,UAAU,GAAG,IAAI,CAAC;;AAEtB,+BAAO,UAAS,QAAQ,EAAE,aAAa,EAAE,qBAAqB,EAAE;AAC5D,gCAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9C,gCAAI,QAAQ,oBAAO,SAAS,mCAAI,QAAQ,MAAC,CAAC;;AAE1C,sCAAU,CAAC,sBAAsB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACtD,sCAAU,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;AAErC,mCAAO,QAAQ,CAAC,WAAW,CAAC;AACxB,oCAAI,EAAE,QAAQ,GAAG,UAAU,CAAC,IAAI;AAChC,0CAAU,EAAE,qBAAqB;AACjC,wCAAQ,EAAE,SAAS,CAAC,QAAQ;AAC5B,wCAAQ,EAAE,QAAQ;6BACrB,EAAE,aAAa,CAAC,CAAC;yBACrB,CAAC;qBACL;;;yBAES,YAAG;AACT,4BAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACf,gCAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CACzB,SAAS,GAAG,IAAI,CAAC,IAAI,EACrB,IAAI,CAAC,YAAY,CACpB,CAAC;;AAEF,gCAAI,CAAC,OAAO,CAAC,OAAO,CAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CACrD,CAAC;;AAEF,gCAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAChC;AACD,+BAAO,IAAI,CAAC,OAAO,CAAC;qBACvB;;;uBAjDQ,KAAK;eAAS,UAAU;;6BAAxB,KAAK;;+BAoDH,KAAK","file":"src/store.js","sourcesContent":["import angular from 'angular';\nimport Annotation from './annotation';\n\nexport class Store extends Annotation {\n    get serviceName() {\n        var name = this.name;\n        return name[0].toUpperCase() + name.slice(1) + 'Store';\n    }\n\n    getInjectionTokens() {\n        return [\n            'LuxyFlux',\n            'LuxyFluxStore',\n            'ApplicationDispatcher'\n        ].concat(super.getInjectionTokens());\n    }\n\n    get factoryFn() {\n        var TargetCls = this.targetCls;\n        var annotation = this;\n\n        return function(LuxyFlux, LuxyFluxStore, ApplicationDispatcher) {\n            var injected = Array.from(arguments).slice(3);\n            var instance = new TargetCls(...injected);\n\n            annotation.applyInjectionBindings(instance, injected);\n            annotation.applyDecorators(instance);\n\n            return LuxyFlux.createStore({\n                name: 'store.' + annotation.name,\n                dispatcher: ApplicationDispatcher,\n                handlers: TargetCls.handlers,\n                decorate: instance\n            }, LuxyFluxStore);\n        };\n    }\n\n    get module() {\n        if (!this._module) {\n            this._module = angular.module(\n                'stores.' + this.name,\n                this.dependencies\n            );\n\n            this._module.factory(\n                this.serviceName,\n                this.getInjectionTokens().concat([this.factoryFn])\n            );\n\n            this.configure(this._module);\n        }\n        return this._module;\n    }\n}\n\nexport default Store;\n"]}