{"version":3,"sources":["src/component.js"],"names":[],"mappings":";;;;;;;;;;;;;QAAO,OAAO;;QACP,UAAU;;QAEJ,SAAS,WAAT,SAAS,cAAS,UAAU;iBAA5B,SAAS;kCAAT,SAAS;;gBAAS,UAAU;AAAV,0BAAU;;;;kBAA5B,SAAS,EAAS,UAAU;;6BAA5B,SAAS;AACd,yBAAa;qBAAA,YAAG;AAChB,wBAAI,UAAU,GAAG,IAAI,CAAC;;AAEtB;AACe,iCADF,aAAa;kDAAb,aAAa;;AAElB,gCAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;AAErC,sCAAU,CAAC,sBAAsB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAClD,sCAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;;AAEjC,uDAPK,aAAa,8CAOT,QAAQ,EAAE;;AAEnB,gCAAI,IAAI,CAAC,QAAQ,YAAY,QAAQ,EAAE;AACnC,oCAAI,CAAC,QAAQ,EAAE,CAAC;6BACnB;yBACJ;;kCAZQ,aAAa;;+BAAb,aAAa;uBAAS,IAAI,CAAC,SAAS,EAa/C;iBACL;;;AAEG,wBAAY;qBAAA,YAAG;AACf,wBAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC/B,2BAAO,SAAS,CAAC,YAAY,CAAC,MAAM,CAChC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,CAC5C,CAAC;iBACL;;;AAEG,kBAAM;qBAAA,YAAG;;AACT,wBAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACf,4BAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;AAErB,4BAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CACzB,aAAa,GAAG,IAAI,EACpB,IAAI,CAAC,YAAY,CACpB,CAAC;;AAEF,4BAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,YAAM;AAC/B,mCAAO;AACH,wCAAQ,EAAE,GAAG;AACb,4CAAY,EAAE,IAAI;AAClB,gDAAgB,EAAE,IAAI;AACtB,0CAAU,EAAE,MAAK,kBAAkB,EAAE,CAAC,MAAM,CAAC,CACzC,MAAK,aAAa,CACrB,CAAC;6BACL,CAAC;yBACL,CAAC,CAAC;;AAEH,4BAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBAChC;;AAED,2BAAO,IAAI,CAAC,OAAO,CAAC;iBACvB;;;;;eAnDQ,SAAS;OAAS,UAAU;yBAsD1B,SAAS","file":"src/component.js","sourcesContent":["import angular from 'angular';\nimport Annotation from './annotation';\n\nexport class Component extends Annotation {\n    get controllerCls() {\n        var annotation = this;\n\n        return class controllerCls extends this.targetCls {\n            constructor() {\n                var injected = Array.from(arguments);\n\n                annotation.applyInjectionBindings(this, injected);\n                annotation.applyDecorators(this);\n\n                super(...injected);\n\n                if (this.activate instanceof Function) {\n                    this.activate();\n                }\n            }\n        };\n    }\n\n    get dependencies() {\n        var targetCls = this.targetCls;\n        return targetCls.dependencies.concat(\n            this.getModuleNames(targetCls.components)\n        );\n    }\n\n    get module() {\n        if (!this._module) {\n            var name = this.name;\n\n            this._module = angular.module(\n                'components.' + name,\n                this.dependencies\n            );\n\n            this._module.directive(name, () => {\n                return {\n                    restrict: 'E',\n                    controllerAs: name,\n                    bindToController: true,\n                    controller: this.getInjectionTokens().concat([\n                        this.controllerCls\n                    ])\n                };\n            });\n\n            this.configure(this._module);\n        }\n\n        return this._module;\n    }\n}\n\nexport default Component;\n"]}