{"version":3,"sources":["src/actions.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;QAAO,OAAO;;QACP,UAAU;;QAEJ,OAAO,WAAP,OAAO,cAAS,UAAU;iBAA1B,OAAO;kCAAP,OAAO;;gBAAS,UAAU;AAAV,0BAAU;;;;kBAA1B,OAAO,EAAS,UAAU;;6BAA1B,OAAO;AACZ,uBAAW;qBAAA,YAAG;AACd,wBAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,2BAAO,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;iBAC5D;;;AAED,8BAAkB;uBAAA,8BAAG;AACjB,2BAAO,CACH,UAAU,EACV,uBAAuB,CAC1B,CAAC,MAAM,4BAVH,OAAO,oDAUwB,CAAC;iBACxC;;;;AAEG,qBAAS;qBAAA,YAAG;AACZ,wBAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC/B,wBAAI,UAAU,GAAG,IAAI,CAAC;;AAEtB,2BAAO,UAAS,QAAQ,EAAE,qBAAqB,EAAE;AAC7C,4BAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9C,4BAAI,QAAQ,qBAAO,SAAS,qBAAI,QAAQ,EAAC,CAAC;;AAE1C,kCAAU,CAAC,sBAAsB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACtD,kCAAU,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;AAErC,+BAAO,QAAQ,CAAC,aAAa,CAAC;AAC1B,sCAAU,EAAE,qBAAqB;AACjC,0CAAc,EAAE,SAAS,CAAC,cAAc;AACxC,oCAAQ,EAAE,QAAQ;yBACrB,CAAC,CAAC;qBACN,CAAC;iBACL;;;AAEG,kBAAM;qBAAA,YAAG;AACT,wBAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACf,4BAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CACzB,UAAU,GAAG,IAAI,CAAC,IAAI,EACtB,IAAI,CAAC,YAAY,CACpB,CAAC;;AAEF,4BAAI,CAAC,OAAO,CAAC,OAAO,CAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CACrD,CAAC;;AAEF,4BAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBAChC;AACD,2BAAO,IAAI,CAAC,OAAO,CAAC;iBACvB;;;;;eA/CQ,OAAO;OAAS,UAAU;yBAiDxB,OAAO","file":"src/actions.js","sourcesContent":["import angular from 'angular';\nimport Annotation from './annotation';\n\nexport class Actions extends Annotation {\n    get serviceName() {\n        var name = this.name;\n        return name[0].toUpperCase() + name.slice(1) + 'Actions';\n    }\n\n    getInjectionTokens() {\n        return [\n            'LuxyFlux',\n            'ApplicationDispatcher'\n        ].concat(super.getInjectionTokens());\n    }\n\n    get factoryFn() {\n        var TargetCls = this.targetCls;\n        var annotation = this;\n\n        return function(LuxyFlux, ApplicationDispatcher) {\n            var injected = Array.from(arguments).slice(2);\n            var instance = new TargetCls(...injected);\n\n            annotation.applyInjectionBindings(instance, injected);\n            annotation.applyDecorators(instance);\n\n            return LuxyFlux.createActions({\n                dispatcher: ApplicationDispatcher,\n                serviceActions: TargetCls.serviceActions,\n                decorate: instance\n            });\n        };\n    }\n\n    get module() {\n        if (!this._module) {\n            this._module = angular.module(\n                'actions.' + this.name,\n                this.dependencies\n            );\n\n            this._module.factory(\n                this.serviceName,\n                this.getInjectionTokens().concat([this.factoryFn])\n            );\n\n            this.configure(this._module);\n        }\n        return this._module;\n    }\n}\nexport default Actions;\n"]}