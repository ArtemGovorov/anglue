{"version":3,"sources":["src/store.js"],"names":[],"mappings":";;;;;;;;;;;QAAO,UAAU;;QAEJ,KAAK,WAAL,KAAK,cAAS,UAAU;iBAAxB,KAAK;kCAAL,KAAK;;gBAAS,UAAU;AAAV,0BAAU;;;;kBAAxB,KAAK,EAAS,UAAU;;6BAAxB,KAAK;AACV,kBAAM;qBAAA,YAAG;AACT,wBAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACf,4BAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,4BAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACjC,4BAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACjC,4BAAI,YAAY,GAAG,CAAC,UAAU,EAAE,uBAAuB,CAAC,CAAC;AACzD,4BAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;AAC9B,4BAAI,eAAe,GAAG,IAAI,CAAC;AAC3B,4BAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;;AAElE,8BAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAC,OAAO,EAAK;AACzC,wCAAY,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;yBAC1C,CAAC,CAAC;;AAEH,4BAAI,SAAS,GAAG,YAAW;AACvB,gCAAI,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC3B,gCAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACjC,gCAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,kCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK,EAAK;AAChD,sCAAM,CAAC,cAAc,CACjB,KAAK,EACL,OAAO,EACP,EAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAC,CAC3B,CAAC;6BACL,CAAC,CAAC;AACH,kCAAM,CAAC,cAAc,CACjB,KAAK,EACL,kBAAkB,EAClB,EAAC,KAAK,EAAE,eAAe,EAAC,CAC3B,CAAC;;AAEF,iDAAsB,UAAU;oCAAvB,SAAS;AACd,yCAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;6BAC5B;;AAED,gCAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,gCAAI,qBAAqB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEpC,mCAAO,QAAQ,CAAC,WAAW,CAAC;AACxB,oCAAI,EAAE,QAAQ,GAAG,IAAI;AACrB,0CAAU,EAAE,qBAAqB;AACjC,wCAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC3B,wCAAQ,EAAE,KAAK;6BAClB,CAAC,CAAC;yBACN,CAAC;AACF,oCAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;AAE7B,4BAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CACzB,SAAS,GAAG,IAAI,EAChB,IAAI,CAAC,YAAY,CACpB,CAAC;AACF,4BAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;qBACnD;AACD,2BAAO,IAAI,CAAC,OAAO,CAAC;iBACvB;;;;;eAvDQ,KAAK;OAAS,UAAU;yBA0DtB,KAAK","file":"src/store.js","sourcesContent":["import Annotation from './annotation';\n\nexport class Store extends Annotation {\n    get module() {\n        if (!this._module) {\n            var name = this.name;\n            var injections = this.injections;\n            var decorators = this.decorators;\n            var factoryArray = ['LuxaFlux', 'ApplicationDispatcher'];\n            var StoreCls = this.targetCls;\n            var storeAnnotation = this;\n            var factoryName = name[0].toUpperCase() + name.slice(1) + 'Store';\n\n            Object.keys(injections).forEach((binding) => {\n                factoryArray.push(injections[binding]);\n            });\n\n            var factoryFn = function() {\n                var store = new StoreCls();\n                var args = Array.from(arguments);\n                var injected = args.slice(2);\n                Object.keys(injections).forEach((binding, index) => {\n                    Object.defineProperty(\n                        store,\n                        binding,\n                        {value: injected[index]}\n                    );\n                });\n                Object.defineProperty(\n                    store,\n                    '_storeAnnotation',\n                    {value: storeAnnotation}\n                );\n\n                for (let decorator of decorators) {\n                    decorator.decorate(this);\n                }\n\n                var LuxaFlux = args[0];\n                var ApplicationDispatcher = args[1];\n\n                return LuxaFlux.createStore({\n                    name: 'store.' + name,\n                    dispatcher: ApplicationDispatcher,\n                    handlers: StoreCls.handlers,\n                    decorate: store\n                });\n            };\n            factoryArray.push(factoryFn);\n\n            this._module = angular.module(\n                'stores.' + name,\n                this.dependencies\n            );\n            this._module.factory(factoryName, factoryArray);\n        }\n        return this._module;\n    }\n}\n\nexport default Store;\n"]}